/**
 * Copyright (c) 2013 NSD CO., LTD. All Rights Reserved.
 */
/****************************************************************************************************************
 * 科目のねらい画面
 ****************************************************************************************************************/
// ---- 科目のねらい画面起動 ---- //
/**
 * @param twin
 *            起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param gksktdid
 *            学習活動ID
 *
 **/
function kamokunoneraiDialogOpen(twin,gksktdid) {
	twin = twin || window;

	openNearaiWindow(twin, gksktdid, editTypeRef);


}

function openNearaiWindow(twin, gksktdid, editptn) {
	twin = twin || window;

	if ($("#iframeKNeraiWin").val() != undefined) {
		return;
	}

	var _buttons = {};
	if (editptn == editTypeRef) {
		// 閉じるボタン
		_buttons[clsBtnName] = function() {
			closeDialog(twin,'iframeKNeraiWin','');
		}
	} else {

		editptn = editTypeUpd;
		// 登録ボタン
		_buttons[updBtnName] = function() {
			// 確認画面
			confirmDialogDef(confWinUpdMessage,
					function(cancel) {
						if (!cancel) {
							// 更新処理
							document.getElementById('iframeKNeraiWin').contentWindow.update();
							}
					});
		};

		// 閉じるボタン
		_buttons[clsBtnName] = function() {

			// 変更がある場合
			if (document.getElementById("iframeKNeraiWin").contentWindow.isChanged) {
				// 確認ダイアログ表示
				confirmDialogDef(confWinCelClsMessage, function(cancel){
					if (!cancel) {
						closeDialog(twin,'iframeKNeraiWin','');
					}
				});
			} else {
				closeDialog(twin,'iframeKNeraiWin','');
			}
		};
	}

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeKNeraiWin" class="iframeKNeraiWin" ' + 'src="'
					+ kamokunoneraiUrl + '?gksktdid=' + gksktdid + '&editptn=' + editptn + '" />',
					twin.document)
			.dialog({
				width : 500,
				height : 300,
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				title : kamokunoneraiWinTitle,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '94%');
					$(this).css('height', '270px');

				},
				close : function(event, ui) {
					$(this).dialog("destroy");
				}
			}).dialog('open');
}
/****************************************************************************************************************
 * 日記コメント画面
 ****************************************************************************************************************/
/**
 * @param twin
 * @param gksktdid
 * @param editptn
 */
function openDiaryCmtWindow(twin, gksktdid, userid, groupid, cdate) {
	twin = twin || window;

	if ($("#iframeDCmtWin").val() != undefined) {
		return;
	}

	var _buttons = {};

		// 登録ボタン
		_buttons[updBtnName] = function() {
			// 確認画面
			confirmDialogDef(confWinUpdMessage,
					function(cancel) {
						if (!cancel) {
							// 更新処理
							document.getElementById('iframeDCmtWin').contentWindow.update();
							}
					});
		};

		// 閉じるボタン
		_buttons[clsBtnName] = function() {

			// 変更がある場合
			if (document.getElementById("iframeDCmtWin").contentWindow.isChanged) {
				// 確認ダイアログ表示
				confirmDialogDef(confWinCelClsMessage, function(cancel){
					if (!cancel) {
						window.parent.reloadPosition();
						closeDialog(twin,'iframeDCmtWin','');
					}
				});
			} else {
				window.parent.reloadPosition();
				closeDialog(twin,'iframeDCmtWin','');
			}
		};


	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeDCmtWin" class="iframeDCmtWin" ' + 'src="'
					+ diaryCmtUrl + '?gksktdid=' + gksktdid + '&userid=' + userid +
					'&grpid=' + groupid + '&cdate=' + cdate + '" />',
					twin.document)
			.dialog({
				width : 500,
				height : 300,
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				title : diaryCmtWinTitle,
				//modal時のdraggableは組み合わせ固定
//				modal : false, draggable : true, appendTo : "#dialog_parent",
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '94%');
					$(this).css('height', '270px');

				},
				close : function(event, ui) {
					$(this).dialog("destroy");
				}
			}).dialog('open');
}

/*******************************************************************************
 * 評価登録画面
 ******************************************************************************/
// ---- 評価詳細登録画面起動 ----//
/**
 * @param twin
 *            起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param editptn
 *            編集パターン(新規、更新... CommonConst.EDIT_TYPE_ より選択)
 * @param userid
 *            表示対象生徒のユーザID
 * @param gksktdid
 *            学習活動ID
 */
function openHyokaWindow(twin, editptn, userid, gksktdid) {
	openHyokaDetailWindow(twin, editptn, userid, gksktdid,  null);
}

function openHyokaDetailWindow(twin, editptn, userid, gksktdid, keynendo) {
	twin = twin || window;

	var _buttons = {};

	if (editptn == editTypeIst || editptn == editTypeUpd) {
		// 登録・編集

		// 登録ボタン
		_buttons[updBtnName] = function() {

//			if (isMakeFolderCheck()) {
//				// チェック処理の結果更新可能だった場合のみ
			//クライアント入力チェック
			if(document.getElementById('iframeHyokaTrkWin').contentWindow.isCheckErr()){
				return;
			}

			var notGennenMsg = '';
			if(!genFlg){
				notGennenMsg = confWinKakoMessage;
			}
			// 確認画面
			confirmDialogDef(confWinUpdMessage + notGennenMsg,
					function(cancel) {
						if (!cancel) {
							// 更新処理
							document.getElementById('iframeHyokaTrkWin').contentWindow.frame_submit();
						}
					});
//			}
		};

		// キャンセルボタン
		_buttons[celclsBtnName] = function() {

			// ダイアログ変更フラグ
			var editFlg = "0";
			if (document.getElementById('iframeHyokaTrkWin').contentWindow.document.getElementById("editFlg") != null) {
				editFlg = document.getElementById('iframeHyokaTrkWin').contentWindow.document.getElementById("editFlg").value;
			}

			// 変更がない、または参照の場合
			if ( editFlg == '0' && !document.getElementById('iframeHyokaTrkWin').contentWindow.isChanged || editptn == 'refer') {

				// ダイアログを閉じる前の処理
				beforeClose('iframeHyokaTrkWin');

				//親の表示時間を子の表示時間に上書き(セッションエラー回避)
				updOyaSign('iframeHyokaTrkWin');
				// 親画面再起動
				execSrvStatus('reload');

			// 上記以外
			} else {
				// 確認ダイアログ表示
				confirmDialogDef(confWinCelClsMessage, function(cancel){
					if(!cancel){
						beforeClose('iframeHyokaTrkWin');
						updOyaSign('iframeHyokaTrkWin');
						execSrvStatus('reload');
					}
				});
			}
		};

	} else {
		// 参照モード
		// 閉じるボタン
		_buttons[clsBtnName] = function() {

			// ダイアログを閉じる前の処理
			beforeClose('iframeHyokaTrkWin');

			//親の表示時間を子の表示時間に上書き(セッションエラー回避)
			updOyaSign('iframeHyokaTrkWin');
			// 確認画面
			$('.iframeHyokaTrkWin', twin.document).dialog('close');
//			// 親画面再表示
//			if (editptn != editTypeRef) {
//				execSrvStatus('closeHyokaTrk');
//			}

		};
	}
    var iframeStr = '<iframe id="iframeHyokaTrkWin" class="iframeHyokaTrkWin" '
					+ 'src="' + hyokaTrkUrl + '?editptn=' + editptn
					+ '&userid=' + userid + '&gksktdid=' + gksktdid;
    if(keynendo != null){
    	iframeStr += '&keyNendo=' + keynendo;
    }
    iframeStr += '" />';
	// URLを指定したiframeを小窓で表示
	$(
			iframeStr,
			twin.document).dialog(
			{
				width : 1200,//1100
				height : 800,//750
				resizable : false,
				autoOpen : false,
				closeOnEscape : false,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
//				position : {
//					my : "100px",
//					at : "100px",
//					of : twin
//				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ不要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '750px');
				},
				close : function(event, ui) {
					$(this).dialog("destroy");
				}
			}).dialog('open');
}

// ダイアログを閉じる前の処理
function beforeClose(iframeId) {

//  UT-1154 シンボリックエラー対応（子画面終了時に画像削除をやめる）
//	// 概要部分 画像削除
//	if (document.getElementById(iframeId)) {
//		document.getElementById(iframeId).contentWindow.doEditorImgTmpClear();
//	}
//
//	// 日記の場合
//	if (document.getElementById(iframeId)
//			&& document.getElementById(iframeId).contentWindow.GAKU_TYPE == 'diary') {
//		document.getElementById(iframeId).contentWindow.tmpImgClear();
//	}

}

/*******************************************************************************
 * 児童生徒・学習活動登録画面
 ******************************************************************************/
var jikoUpdFlg = false;
// ---- 学習活動登録画面起動 ----//
/**
 * 学習活動登録画面 小窓起動
 * @param twin 起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param updptn 起動パターン(フォルダ、提出、アンケート... CommonConst.GAKUSYU_KATUDO_SBT_ より選択)
 * @param gksktdid 学習活動ID
 * @param userid 表示対象生徒のID
 * @param editptn 編集パターン(更新or参照 CommonConst.EDIT_TYPE_ より選択)
 */
function openStuGksKtdWindow(twin, updptn, gksktdid, userid, editptn){
	twin = twin || window;

	var _buttons = {};

	// *
	// ----------------------------------------------------------------------------------
	// *
	// * ----------------------------------- ボタン生成
	// ----------------------------------- *
	// * start

	// ≪ボタンパターン≫
	// フォルダ ---- 閉じる
	// 提出 -------- 提出・保存・キャンセル
	// 話し合い ---- 閉じる
	// 学習教材 ---- 閉じる
	// 確認テスト -- 提出・保存・キャンセル
	// アンケート -- 提出・保存・キャンセル
	// 相互評価 ---- 閉じる
	// 日記 -------- 閉じる

	var boolTst = false;// 提出
	var boolIhz = false;// 保存
	var boolCel = false;// キャンセル
	var boolCls = false;// 閉じる
	var boolJiko = false;// 自己評価
	var boolIns = false;// 登録
	var boolDel = false;// 削除
	var boolRetry = false;// やり直し
	var boolSougo = false;//相互評価

	if (updptn == updType0) {// フォルダ
		boolCls = true;
		boolJiko = true;
	} else if (updptn == updType1) {// 提出
		if(editptn == "update"){
			boolTst = true;
			boolIhz = true;
			boolCel = true;
		}else if(editptn == "refer"){
			boolCls = true;
		}
		boolJiko = true;
		boolSougo = true;
	} else if (updptn == updType3 || updptn == updType7) {// 話し合い、相互評価
//		if(editptn == "update"){
			boolCel = true;
//		}else if(editptn == "refer"){
//			boolCls = true;
//		}
		boolJiko = true;
	} else if (updptn == updType4) {// 学習教材
		boolCls = true;

	} else if (updptn == updType5 || updptn == updType6) {// 確認テスト、アンケート
		if (editptn == "update") {
			boolJiko = true;
			boolTst = true;
			boolIhz = true;
			boolCel = true;
			boolRetry = true;

		} else if(editptn == "refer") {
			boolJiko = true;
			boolCls = true;
		}

	} else if (updptn == updType8) {// 日記
		if(editptn == "update"){
			boolCel = true;
			boolIns = true;
			boolDel = true;
		}else if(editptn == "refer"){
			boolCls = true;
		}
		boolJiko = true;
		boolSougo = true;

	} else {
		// 学習活動が存在しない場合
		boolCls = true;
	}


		if(boolRetry){//リトライボタン
			_buttons[retryBtnName] = function() {
				if (updptn == updType6) {
					confWinRetryMessage = confWinRetryEnqMessage;
				}
				// 確認画面
				confirmDialogDef(confWinRetryMessage, function(cancel){
					if(!cancel){
						//update処理
						document.getElementById('iframeStuGksKtdWin').contentWindow.retry();
					}
				});
			};
		}

		if(boolSougo){// 相互評価ボタン
			//相互評価確認ボタン
			_buttons[sghkknBtnName] = function() {
				//相互評価一覧画面
				sougoIcrnDialogOpen(window.parent, gksktdid, userid);
			};
			_buttons[sghBtnName] = function() {
				// 相互評価画面
				openSougoTrkDialog(window.parent, gksktdid, userid);
			};

		}

		if(boolJiko){// 自己評価ボタン
			_buttons[jkhBtnName] = function() {
				// 自己評価画面
				openStuJikoHyokaWindow(window.parent, gksktdid, userid);
			};

		}

		if (boolTst) {// 提出ボタン(提出、確認テスト、アンケート)
			_buttons[tstBtnName] = function() {
				document.getElementById('iframeStuGksKtdWin').contentWindow.frame_submit_Teisyutu('1');
			};
		}

		if (boolIhz) {// 保存ボタン(提出、確認テスト、アンケート)
			_buttons[ihzBtnName] = function() {
				document.getElementById('iframeStuGksKtdWin').contentWindow.frame_submit_Teisyutu('0');
			};
		}

		if(boolIns){// 登録ボタン(日記)
			_buttons[updBtnName] = function() {
				document.getElementById('iframeStuGksKtdWin').contentWindow.doDiaryIns();
			};
		}

		if(boolDel){// 削除ボタン(日記)
			_buttons[delBtnName] = function() {
				document.getElementById('iframeStuGksKtdWin').contentWindow.doDiaryDel();
			};
		}

		if (boolCel) {// キャンセルボタン
			_buttons[celclsBtnName] = function(){

				// 変更確認フラグ
				// ※エディタ部分は共通の変更管理が効かない
				var isChangedTmp = false;

				if (updptn == updType1
						&& typeof document.getElementById("iframeStuGksKtdWin").contentWindow.getIsChangedTei == "function") {
					isChangedTmp = document.getElementById("iframeStuGksKtdWin").contentWindow.getIsChangedTei();

				} else if (updptn == updType8
						&& typeof document.getElementById("iframeStuGksKtdWin").contentWindow.getIsChanged == "function") {
					isChangedTmp = document.getElementById("iframeStuGksKtdWin").contentWindow.getIsChanged();

				} else if (typeof document.getElementById("iframeStuGksKtdWin").contentWindow.isChanged !== "undefined") {
					isChangedTmp = document.getElementById("iframeStuGksKtdWin").contentWindow.isChanged;
				}

				// 参照の場合
				if (editptn == 'refer') {
					// ダイアログを閉じる前の処理
					beforeClose('iframeStuGksKtdWin');
					//親の表示時間を子の表示時間に上書き(セッションエラー回避)
					updOyaSign("iframeStuGksKtdWin");
					// 親画面再起動
					execSrvStatus('reload');
				} else {

					var hasMitei = false;
					if (typeof document.getElementById("iframeStuGksKtdWin").contentWindow.hasMiteiHozon == "function") {
						hasMitei = document.getElementById("iframeStuGksKtdWin").contentWindow.hasMiteiHozon();
					}

					//変更あり
					if(isChangedTmp){
						// 編集破棄確認ダイアログ表示
						confirmDialogDef(confWinCelClsMessage, function(cancel){
							if(!cancel){
								//未提出の保存データ有
								if(hasMitei){
									// 未提出確認ダイアログ表示
									confirmDialogDef(confWinMiteiClsMessage, function(cancel){
										if(!cancel){
											beforeClose('iframeStuGksKtdWin');
											updOyaSign("iframeStuGksKtdWin");
											execSrvStatus('reload');
										}
									});
								//未提出の保存データなし
								}else{
									beforeClose('iframeStuGksKtdWin');
									updOyaSign("iframeStuGksKtdWin");
									execSrvStatus('reload');
								}
							}
						});
					//変更なし
				} else {
						//未提出の保存データ有
						if(hasMitei){
							// 未提出確認ダイアログ表示
							confirmDialogDef(confWinMiteiClsMessage, function(cancel){
						if(!cancel){
							beforeClose('iframeStuGksKtdWin');
							updOyaSign("iframeStuGksKtdWin");
							execSrvStatus('reload');
						}
					});
						//未提出の保存データなし
						}else{
							beforeClose('iframeStuGksKtdWin');
							updOyaSign("iframeStuGksKtdWin");
							execSrvStatus('reload');
						}
					}

				}
			};
		}
		if (boolCls){// 閉じるボタン
			_buttons[clsBtnName]  = function(){

				// ダイアログを閉じる前の処理
				beforeClose('iframeStuGksKtdWin');

				if(jikoUpdFlg || (editptn == "update")){
					//親の表示時間を子の表示時間に上書き(セッションエラー回避)
					updOyaSign("iframeStuGksKtdWin");
					// 親画面再起動
					execSrvStatus('reload');
				}else{
					$('.iframeStuGksKtdWin', twin.document).dialog('close');
				}

			};
		}

	// * end
	// * ----------------------------------- ボタン生成
	// ----------------------------------- *
	// *
	// ----------------------------------------------------------------------------------
	// *
	// URLを指定したiframeを小窓で表示
	$('<iframe id="iframeStuGksKtdWin" class="iframeStuGksKtdWin" ' +
			'src="'+stuGksKtdUrl+ "?updptn="+updptn+ "&gksktdid="+gksktdid+ "&userid="+userid+ "&editptn="+editptn+ '" />', twin.document)
	.dialog({
		width:1150,
		height:550,
		resizable: false,
		autoOpen: false,
		closeOnEscape: false,
		//modal時のdraggableは組み合わせ固定
		modal : true, draggable : false,
		position : {
			my : "left top",
			at : "left top",
			of: positionLT()
		},
		// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
		/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
		hide: "slide",*/
		buttons: _buttons,
		open : function(event, ui){
			positionLT();
			// ヘッダ不要
			$(this, twin.document).closest(".ui-dialog").find(".ui-dialog-titlebar").hide();
			//ボタン隠す
			$('.ui-dialog-buttonpane').hide();
			// iframeにフォーカス
			$(this).focus();
			// iframeのCSSを指定
			$(this).css('width', '96%');
			$(this).css('height', '565px');
			frameScroll($(this));
		},
		close : function(event, ui) {
			$(this).dialog("destroy");
		}
	}).dialog('open');
}

/*******************************************************************************
 * 児童生徒・自己評価登録画面
 ******************************************************************************/
// ---- 自己評価登録画面起動 ----//
/**
 * 自己評価登録画面 小窓起動
 *
 * @param twin
 *            起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param gksktdid
 *            学習活動ID
 * @param userid
 *            表示対象生徒のID
 * @param editptn
 *            起動パターン（更新あり："update"、更新なし："refer"）
 */
// TODO 児童生徒・自己評価画面起動function
function openStuJikoHyokaWindow(twin, gksktdid, userid) {

	twin = twin || window;

	// * -----------------------------------
	// ボタン生成
	// ----------------------------------- *
	// * start
	// 登録ボタン
	var _buttons = {};


		_buttons[jikoHyoka_updBtnName] = function() {

			//クライアント入力チェック
			if(document.getElementById('iframeStuJikoHyokaWin').contentWindow.isCheckErr()){
				return;
			}
			// 確認画面
			confirmDialogDef(confWinUpdMessage,
					function(cancel) {
						if (!cancel) {

							// 登録処理
							document.getElementById('iframeStuJikoHyokaWin').contentWindow.frame_submit();
						}
					}
			);
		};

		// キャンセルボタン
		_buttons[jikoHyoka_celBtnName] = function() {
			// 変更がない場合
			if (!document.getElementById("iframeStuJikoHyokaWin").contentWindow.isChanged) {
				closeDialog(twin,'iframeStuJikoHyokaWin','iframeStuGksKtdWin');

			// 上記以外
			} else {
				// 確認ダイアログ表示
				confirmDialogDef(confWinCelClsMessage, function(cancel){
					if (!cancel) {
						closeDialog(twin,'iframeStuJikoHyokaWin','iframeStuGksKtdWin');
					}
				});
			}
		};

//		// 閉じるボタン
//		_buttons[jikoHyoka_clsBtnName] = function() {
//			closeDialog(twin,'iframeStuJikoHyokaWin','iframeStuGksKtdWin');
//		};


	// * end
	// * -----------------------------------
	// ボタン生成
	// ----------------------------------- *


	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeStuJikoHyokaWin" class="iframeStuJikoHyokaWin" '
					+ 'src="' + jikoHyokaTrkUrl + "?gksktdid=" + gksktdid
					+ "&userid=" + userid + '" />', twin.document).dialog(
			{
				width : 1100,
				height : 600,
				resizable : false,
				autoOpen : false,
				closeOnEscape : false,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ不要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '575px');

				},
				close : function(event, ui) {
					$(this).dialog("destroy");
				}
			}).dialog('open');
}


/*******************************************************************************
 * 経年画面（観点別評価履歴画面）
 ******************************************************************************/
// 経年画面起動
/**
 * 経年画面を起動する
 *
 * @param twin
 *            起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param userid
 *            利用者ID
 * @param gksktdid
 *            対象科目の学習活動ID
 */
function keinenWinOpen(twin, userid, gksktdid) {
	twin = twin || window;

	var _buttons = {};
	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		// 画面終了
		$('.iframeKeinenWin', twin.document).dialog('close');
	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeKeinenWin" class="iframeKeinenWin" ' + 'src="'
					+ keinenUrl + "?userid=" + userid + "&gksktdid=" + gksktdid
					+ '" />', twin.document).dialog(
			{
				width : 1100,
				height : 550,
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				title : keinenWinTitle,
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar-close").hide();
					$(".ui-dialog-titlebar-close", twin.document).hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '500px');
				},
				close : function(event, ui) {
					//.remove()だとJs側でエラーになっている。
					//$(this).dialog("destory").remove();
					$(this).dialog("destroy");
				}
			}).dialog('open');
};

/*******************************************************************************
 * フォルダ・学習活動概要画面
 ******************************************************************************/
/**
 * フォルダ・学習活動概要画面を起動する
 *
 * @param twin
 *            起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param gksktdid
 *            学習活動ID
 */
function gksKtdGiyDialogOpen(twin, gksktdid) {
	twin = twin || window;

	if ($("#iframeGksKtdGiyWin").val() != undefined) {
		return;
	}

	var _buttons = {};
	// 閉じるボタン
	_buttons[clsBtnName] = function() {

		beforeClose("iframeGksKtdGiyWin");

		var oyaKouho = ['iframeHyokaTrkWin'];
		identifyOyaFrame(oyaKouho,function(oyaframe){
			closeDialogRestore(window.parent, 'iframeGksKtdGiyWin', oyaframe);
		});

	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeGksKtdGiyWin" class="iframeGksKtdGiyWin" '
					+ 'src="' + gksKtdGiyUrl + '?gksktdid=' + gksktdid + '" />',
			twin.document).dialog(
			{
				width : 850,
				height : 230,
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				title : gksKtdGiyWinTitle,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$(window.document).find('.ui-dialog-buttonpane').hide();
					$(window.parent.document).find('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();

					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '390px');

				},
				close : function(event, ui) {
					//.remove()だとJs側でエラーになっている。
					//$(this).dialog("destory").remove();
					$(this).dialog("destroy");
				}
			}).dialog('open');
}

/*******************************************************************************
 * 評価規準 ・基準画面
 ******************************************************************************/
/**
 * 評価規準 ・基準画面を起動する
 *
 * @param twin
 *            起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param gksktdid
 *            学習活動ID
 */
function hkNrjnMtjnDialogOpen(twin, gksktdid) {
	twin = twin || window;
	if ($("#iframeHkNrjnMtjnWin").val() != undefined) {
		return;
	}

	//子画面 on 子画面 の対応
	var str_appendTo = "#dialog_parent";
	if (iframeFlg) {
		str_appendTo = null;
	}

	var _buttons = {};
	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		// 画面終了
		$('.iframeHkNrjnMtjnWin', twin.document).dialog('close');
	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeHkNrjnMtjnWin" class="iframeHkNrjnMtjnWin" '
					+ 'src="' + hkNrjnMtjnUrl + '?gksktdid=' + gksktdid
					+ '" />', twin.document).dialog(
			{
				width : 600,
				height : 450,
				resizable : true,
				autoOpen : false,
				closeOnEscape : true,
				title : hkNrjnMtjnWinTitle,
				//modal時のdraggableは組み合わせ固定
				modal : false, draggable : true, appendTo : str_appendTo,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '450px');

				},
				close : function(event, ui) {
					$(this).dialog("destroy");
				}
			}).dialog('open');
}

/*******************************************************************************
 * 観点別評価計算画面
 ******************************************************************************/
/**
 * 観点別評価計算画面を起動する
 *
 * @param twin
 *            起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param gksktdid
 *            学習活動ID
 */
function hkAutoCalcDialogOpen(twin, gksktdid) {
	twin = twin || window;

	// iframeが定義済みの場合は、処理をしない。
	if ($("#iframeHkAutoCalcWin").val() != undefined) {
		return;
	}

	//子画面 on 子画面 の対応
	var str_appendTo = "#dialog_parent";
	if (iframeFlg) {
		str_appendTo = null;
	}

	var _buttons = {};

	// 設定ボタン
	_buttons[setBtnName] = function() {

		// 確認画面
		confirmDialogDef(confWinSetMessage,
				function(cancel) {
					if (!cancel) {

						// 設定処理（処理は「HyokaAutoCalcDialog.js」に記載）
						document.getElementById('iframeHkAutoCalcWin').contentWindow.frame_submit();
					}
				});
	};

	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		// 画面終了
		$('.iframeHkAutoCalcWin', twin.document).dialog('close');
	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeHkAutoCalcWin" class="iframeHkAutoCalcWin" '
					+ 'src="' + hkAutoCalcUrl + '?gksktdid=' + gksktdid
					+ '" />', twin.document).dialog(
			{
				width : 1000,
				height : 100,
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				title : hkAutoCalcWinTitle,
				//modal時のdraggableは組み合わせ固定
				modal : false, draggable : true, appendTo : str_appendTo,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '180px');

				},
				close : function(event, ui) {
					$(this).dialog("destroy");
				}
			}).dialog('open');
}

/*******************************************************************************
 * 学習活動取組状況画面
 ******************************************************************************/
/**
 * 学習活動取組状況画面を起動する
 *
 * @param twin
 *            起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param gksktdid
 *            学習活動ID
 * @param gksktdNm
 *            学習活動名称
 */
function trkmJkDialogOpen(twin, gksktdid, gksktdNm) {

	if ($("#iframeTrkmJkWin").val() != undefined) {
		return;
	}

	twin = twin || window;

	var _buttons = {};
	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		// 画面終了
		/*$(this, twin.document).dialog('close');*/
		window.parent.jQuery('.iframeTrkmJkWin').dialog('close');
	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeTrkmJkWin" class="iframeTrkmJkWin" ' + 'src="'
					+ gksKtdTrkmJkUrl + '?gksktdid=' + gksktdid+ '" />', twin.document)
			.dialog(
					{
						width : 560,
						height : 250,
						resizable : true,
						autoOpen : false,
						closeOnEscape : true,
						title : gksKtdTrkmJkWinTitle + " - " + gksktdNm,
						// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
						/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
						hide: "slide",*/
						//modal時のdraggableは組み合わせ固定
						modal : false, draggable : true, appendTo : "#dialog_parent",
						position : {
							my : "left top",
							at : "left top",
							of: positionLT()
						},
						buttons : _buttons,
						open : function(event, ui) {
							positionLT();
							// ヘッダ要
							$(this, twin.document).closest(".ui-dialog").find(
									".ui-dialog-titlebar").show();
							//ボタン隠す
							$('.ui-dialog-buttonpane').hide();
							// iframeにフォーカス
							$(this).focus();
							// iframeのCSSを指定
							$(this).css('width', '96%');
							$(this).css('height', '530px');

						},
						close : function(event, ui) {
							//親の表示時間を子の表示時間に上書き(セッションエラー回避)
							updOyaSign('iframeTrkmJkWin');
							$(this, twin.document).dialog("destroy");
						}
					}).dialog('open');
}

/*******************************************************************************
 * ショーケースコメント登録画面
 ******************************************************************************/
function openCommentDialog(twin, showid) {

	var _buttons = {};
	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		//親の表示時間を子の表示時間に上書き(セッションエラー回避)
		updOyaSign('iframeShowCommentWin');
		// 画面終了
		window.parent.jQuery('.iframeShowCommentWin').dialog('close');
	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeShowCommentWin" class="iframeShowCommentWin" '+
			'src="' + showCaseCommentDialogUrl +
			'?showid=' + showid + '" />', twin.document)
			.dialog(
					{
						width : 1100,
						height : 850,
						resizable : false,
						autoOpen : false,
						closeOnEscape : true,
						//modal時のdraggableは組み合わせ固定
						modal : true, draggable : false,
						position : {
							my : "left top",
							at : "left top",
							of: positionLT()
						},
						buttons : _buttons,
						open : function(event, ui) {
							positionLT();
							// ヘッダ不要
							$(this, twin.document).closest(".ui-dialog").find(
									".ui-dialog-titlebar").hide();
							// ×ボタン不要
							$(this, twin.document).closest(".ui-dialog").find(
									".ui-dialog-titlebar-close").hide();
							//ボタン隠す
							$('.ui-dialog-buttonpane').hide();
							// iframeにフォーカス
							$(this).focus();
							// iframeのCSSを指定
							$(this).css('width', '96%');
							$(this).css('height', '580px');

						},
						close : function(event, ui) {
							$(this, twin.document).dialog("destroy");
						}
					}).dialog('open');

}

// URL内のリクエストを取得 ※iframeの場合のみ独自に使用 共通化一案
function iFrameViewInit() {
	var vars = [], hash;
	// var hashes = window.location.href.slice(window.location.href.indexOf('?')
	// + 1).split('&');
	var hashes = location.search.split('?');
	for ( var i = 0; i < hashes.length; i++) {
		if (hashes[i] != '') {
			hash = hashes[i].split('=');
			vars.push(hash[0]);
			vars[hash[0]] = hash[1];
		}
	}
	// alert("updptn : "+vars.updptn + " / editptn: " +vars.editptn);

	return vars;
}

/*******************************************************************************
 * ショーケース成果物情報詳細画面
 ******************************************************************************/
/**
 * ショーケース成果物情報詳細画面を起動する
 *
 * @param twin
 *            起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param gksktdid
 *            学習活動ID
 */
function showCaseSikbtInfoDialogOpen(twin, fileNo) {
	openShowCaseSeika(twin, fileNo, editTypeRef);
}

function openShowCaseSeika(twin, fileNo, editptn) {
	twin = twin || window;

	if ($("#iframeShowCaseSikbtInfoWin").val() != undefined) {
		return;
	}

	var _buttons = {};
	if (editptn == editTypeRef) {
		// 閉じるボタン
		_buttons[clsBtnName] = function() {
			closeDialog(twin,'iframeShowCaseSikbtInfoWin','');
		}
	} else {

		editptn = editTypeUpd;
		// 登録ボタン
		_buttons[updBtnName] = function() {
			// 確認画面
			confirmDialogDef(confWinUpdMessage,
					function(cancel) {
						if (!cancel) {
							// 更新処理
							document.getElementById('iframeShowCaseSikbtInfoWin').contentWindow.update();
							}
					});
		};

		// 閉じるボタン
		_buttons[clsBtnName] = function() {

			// 変更がある場合
			if (document.getElementById("iframeShowCaseSikbtInfoWin").contentWindow.isChanged) {
				// 確認ダイアログ表示
				confirmDialogDef(confWinCelClsMessage, function(cancel){
					if (!cancel) {
						//親の表示時間を子の表示時間に上書き(セッションエラー回避)
						updOyaSign("iframeShowCaseSikbtInfoWin");
						// 親画面再起動
						execSrvStatus('reload');
					}
				});
			} else {
				//親の表示時間を子の表示時間に上書き(セッションエラー回避)
				updOyaSign("iframeShowCaseSikbtInfoWin");
				// 親画面再起動
				execSrvStatus('reload');
			}
		};
	}

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeShowCaseSikbtInfoWin" class="iframeShowCaseSikbtInfoWin" '
					+ 'src="' + showCaseSikbtInfoDialogUrl + '?fileNo=' + fileNo + '" />',
			twin.document).dialog(
			{
				width : 800,
				height : 300,
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				title : showCaseSikbtInfoWinTitle,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '317px');
					frameScroll($(this));

				},
				close : function(event, ui) {
					$(this).dialog("destroy");
				}
			}).dialog('open');
}

/*******************************************************************************
 * 初期パスワード表示画面
 ******************************************************************************/
function passwordDialogOpen(twin,msg) {
	twin = twin || window;

	var _buttons = {};
	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		// 画面終了
		window.parent.jQuery('.iframePasswordWin').dialog('close');
	};
	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframePasswordWin" class="iframePasswordWin" '
			+ 'src="' + pwDialogUrl + '?msg=' + msg + '" />',
			twin.document)
			.dialog({
				width  :500,
				height :300,
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				title : pwWinTitle,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '94%');
					$(this).css('height', '180px');

				},
				close : function(event, ui) {
					$(this).dialog("destroy");
				}
			}).dialog('open');
}

/*******************************************************************************
 * 科目アイコン変更画面
 ******************************************************************************/
//科目アイコン変更画面起動
function openKmkIconChangeWindow(twin, koshu, gakunen, kamokucd, startdate) {

	twin = twin || window;
	var _buttons = {};

		// 変更ボタン
			_buttons[cngBtnName] = function() {

				// 確認ダイアログ表示
				confirmDialogDef(confWinUpdMessage,
						function(cancel) {
							if (!cancel) {

								// 登録処理
								document.getElementById('iframeKmkIconChangeWin').contentWindow.frame_submit();
							}
						}
				);
			};

			// キャンセルボタン
			_buttons[celclsBtnName] = function() {
				// 変更がない場合
				if (!document.getElementById("iframeKmkIconChangeWin").contentWindow.isChanged) {
					//親の表示時間を子の表示時間に上書き(セッションエラー回避)
					updOyaSign("iframeKmkIconChangeWin");
					// 親画面再起動
					execSrvStatus('reload');

				// 上記以外
				} else {
					// 確認ダイアログ表示
					confirmDialogDef(confWinCelClsMessage, function(cancel){
						if(!cancel){
							updOyaSign("iframeKmkIconChangeWin");
							execSrvStatus('reload');
						}
					});
				}
			};


		// * end
		// * -----------------------------------
		// ボタン生成
		// ----------------------------------- *

		// URLを指定したiframeを小窓で表示
		$(
				'<iframe id="iframeKmkIconChangeWin" class="iframeKmkIconChangeWin" '
						+ 'src="' + kmkIconChangeUrl + "?koshu=" + koshu
						+ "&gknn=" + gakunen  + "&kamokucd=" + kamokucd + "&startdate=" + startdate + '" />', twin.document).dialog(
				{
					width : 500,
					height : 300,
					resizable : false,
					autoOpen : false,
					closeOnEscape : false,
					title : kmkIconChangeWinTitle,
					//modal時のdraggableは組み合わせ固定
					modal : true, draggable : false,
					position : {
						my : "left top",
						at : "left top",
						of: positionLT()
					},
					// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
					/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
					hide: "slide",*/
					buttons : _buttons,
					open : function(event, ui) {
						positionLT();
						// ヘッダ要
						$(this, twin.document).closest(".ui-dialog").find(
								".ui-dialog-titlebar").show();
						// ×ボタン不要
						$(this, twin.document).closest(".ui-dialog").find(
								".ui-dialog-titlebar-close").hide();
						//ボタン隠す
						$('.ui-dialog-buttonpane').hide();
						// iframeにフォーカス
						$(this).focus();
						// iframeのCSSを指定
						$(this).css('width', '96%');
						$(this).css('height', '280px');

					},
					close : function(event, ui) {
						$(this).dialog("destroy");
					}
				}).dialog('open');
}

/*******************************************************************************
 * 取込状況照会個別画面
 ******************************************************************************/
//取込状況照会個別画面起動
function importDetailDialogOpen(twin, batch_id) {
	twin = twin || window;
	if ($("#iframeImportDetailWin").val() != undefined) {
		return;
	}

	var _buttons = {};

	// ワーニング情報DLボタン
	_buttons[warningdlBtnName] = function() {
		// ダウンロード
		document.getElementById('iframeImportDetailWin').contentWindow.frame_submit_warning();
	};

	// エラー情報DLボタン
	_buttons[errordlBtnName] = function() {
		// ダウンロード
		document.getElementById('iframeImportDetailWin').contentWindow.frame_submit();
	};

	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		// 画面終了
		$('.iframeImportDetailWin', twin.document).dialog('close');
	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeImportDetailWin" class="iframeImportDetailWin" '
					+ 'src="' + importDetailUrl + '?batch_id=' + batch_id + '" />',
			twin.document).dialog(
			{
				width : 800, // 900
				height : 250, // 230
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				title : importDetailWinTitle,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				buttons : [
				     {
				    	 // 20150924 ワーニング情報DLボタン追加
				    	 text: warningdlBtnName,
				    	 class:'download',
				    	 click: function() {
				    		 document.getElementById('iframeImportDetailWin').contentWindow.frame_submit_warning();
				    	 }
				     },

					{
						text: errordlBtnName,
						class:'download',
						click: function() {
							document.getElementById('iframeImportDetailWin').contentWindow.frame_submit();
						}
					},

					{
						text: clsBtnName,
						class:'btn-update',
						click: function() {
							$('.iframeImportDetailWin', twin.document).dialog('close');
						}
					},
				],
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '350px');

				},
				close : function(event, ui) {
					//.remove()だとJs側でエラーになっている。
					//$(this).dialog("destory").remove();
					$(this).dialog("destroy");
				}
			}).dialog('open');
}

/*******************************************************************************
 * 使用ユーザ数の内訳画面
 ******************************************************************************/
//使用ユーザ数の内訳画面起動
function useUserDetailDialogOpen(twin) {
	twin = twin || window;

	if ($("#iframeUseUserDetailWin").val() != undefined) {
		return;
	}

	var _buttons = {};

	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		// 画面終了
		$('.iframeUseUserDetailWin', twin.document).dialog('close');
	};
	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeUseUserDetailWin" class="iframeUseUserDetailWin" '
					+ 'src="' + useUserDetailUrl + '" />',
			twin.document).dialog(
			{
				width : 900,
				height : 230,
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				title : useUserDetailWinTitle,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '350px');

				},
				close : function(event, ui) {
					//.remove()だとJs側でエラーになっている。
					//$(this).dialog("destory").remove();
					$(this).dialog("destroy");
				}
			}).dialog('open');
}

/*******************************************************************************
 * データ使用容量の内訳画面
 ******************************************************************************/
//データ使用容量の内訳画面起動
function useDataDetailDialogOpen(twin) {
	twin = twin || window;
	if ($("#iframeUseDataDetailWin").val() != undefined) {
		return;
	}

	var _buttons = {};

	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		// 画面終了
		$('.iframeUseDataDetailWin', twin.document).dialog('close');
	};
	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeUseDataDetailWin" class="iframeUseDataDetailWin" '
					+ 'src="' + useDataDetailUrl + '" />',
			twin.document).dialog(
			{
				width : 900,
				height : 230,
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				title : useDataDetailWinTitle,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '350px');

				},
				close : function(event, ui) {
					//.remove()だとJs側でエラーになっている。
					//$(this).dialog("destory").remove();
					$(this).dialog("destroy");
				}
			}).dialog('open');
}

/*******************************************************************************
 * CSVダウンロード画面
 ******************************************************************************/
//CSVダウンロード画面画面起動
function csvDownloadDialogOpen(twin) {
	twin = twin || window;
	if ($("#iframeUseDataDetailWin").val() != undefined) {
		return;
	}

	var _buttons = {};

	// CSVDLボタン
	_buttons[csvDLBtnName] = function() {

		//パラメータ設定
		$('input[name="str_cd"]').val(twin.document.getElementById('iframeCsvDownloadWin').contentWindow.getParameter1);
		$('input[name="str_kgr"]').val(twin.document.getElementById('iframeCsvDownloadWin').contentWindow.getParameter2);

		//親の表示時間を子の表示時間に上書き(セッションエラー回避)
//		updOyaSign('iframeCsvDownloadWin');

		// ダウンロード
		if (typeof window.document.cmdForm !== 'undefined') {
			execSrvNotDisable('csvDownload');

		} else {
			// 2重のダイアログの場合
			frame_execSrvNotDisable('csvDownload');
		}

		// 画面終了
		$('.iframeCsvDownloadWin', twin.document).dialog('close');

	};

	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		// 画面終了
		$('.iframeCsvDownloadWin', twin.document).dialog('close');
	};
	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeCsvDownloadWin" class="iframeCsvDownloadWin" '
					+ 'src="' + csvDLUrl + '" name="testName" />',
			twin.document)
			.dialog({
				width : 500,
				height : 200,
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				title : csvDLUrlWinTitle,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "center center",
					at : "center center",
					of: positionLT()
				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '94%');
					$(this).css('height', '180px');

				},
				close : function(event, ui) {
					//.remove()だとJs側でエラーになっている。
					//$(this).dialog("destory").remove();
					$(this).dialog("destroy");
				}
			}).dialog('open');
}

/*******************************************************************************
 * 凡例
 ******************************************************************************/
function hanreiDialogOpen(twin) {
	twin = twin || window;

	if ($("#iframeHanreiWin").val() != undefined) {
		return;
	}
	var _buttons = {};
	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		window.parent.jQuery('.iframeHanreiWin').dialog('close');
	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeHanreiWin" class="iframeHanreiWin" ' + 'src="' + treeHanreiUrl + '" />', twin.document)
			.dialog(
					{
						width : 500,
						height : 230,
						resizable : true,
						autoOpen : false,
						closeOnEscape : true,
						title : treeHanreiWinTitle,
						//modal時のdraggableは組み合わせ固定
						modal : false, draggable : true, appendTo : "#dialog_parent",
						position : {
							my : "left top",
							at : "left top",
							of: positionLT()
						},
						buttons : _buttons,
						open : function(event, ui) {
							positionLT();
							// ヘッダ要
							$(this).closest(".ui-dialog").find(
									".ui-dialog-titlebar").show();
							// ×ボタン不要
							$(this).closest(".ui-dialog").find(
									".ui-dialog-titlebar-close").hide();
							//ボタン隠す
							$('.ui-dialog-buttonpane').hide();
							// iframeにフォーカス
							$(this).focus();
							// iframeのCSSを指定
							$(this).css('width', '96%');
							$(this).css('height', '230px');

						},
						close : function(event, ui) {
							$(this).dialog("destroy");
						}
					}).dialog('open');
}

/*******************************************************************************
 * マニュアル
 ******************************************************************************/
function manualDialogOpen(twin) {
	twin = twin || window;

	if ($("#iframeManualWin").val() != undefined) {
		return;
	}
	var _buttons = {};
	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		window.parent.jQuery('.iframeManualWin').dialog('close');
	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeManualWin" class="iframeManualWin" ' + 'src="'
					+ manualUrl + '" />', twin.document).dialog(
			{
				width : 320,
				height : 310,
				resizable : true,
				autoOpen : false,
				closeOnEscape : true,
				title : manualWinTitle,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of : positionLT()
				},
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(this).closest(".ui-dialog").find(".ui-dialog-titlebar")
							.show();
					// ×ボタン不要
					$(this).closest(".ui-dialog").find(
							".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '90%');
					$(this).css('height', '310px');

				},
				close : function(event, ui) {
					$(this).dialog("destroy");
				}
			}).dialog('open');
}

// ダイアログ閉じる
function closeDialog(twin, myFrameId, oyaFrameId) {

	//親の表示時間を子の表示時間に上書き(セッションエラー回避)
	updOyaSign(myFrameId);
	//自画面(子)の表示時間を呼び出し元画面(子)の表示時間に上書き(セッションエラー回避)
	// 呼び出し元が常に同じであるため、固定値を設定
	updKoSign(myFrameId, oyaFrameId);
	// 画面終了
	$('.' + myFrameId, twin.document).dialog('close');

}

// ダイアログ閉じる(ulbean,editorbeanリストア)
function closeDialogRestore(twin, myFrameId, oyaFrameId) {

	// 親のUploadBeanを復元してから閉じる
	$.ajax({
		url : serv + getUrlWithCSRFHash('/DownloadCheckServlet?', getForm()),
		type : 'POST',
		data : {kbn:"restoreUl"},
		async : false,
		cache : false,
		success : function(data) {
			closeDialog(twin, myFrameId, oyaFrameId);
		},
	});

}
//呼び出し元の特定（先頭から順に確認する)
function identifyOyaFrame(oyaAry, response){
	for(i=0; i<oyaAry.length; i++){
		//呼び出し元の子画面を特定する
		if(window.parent.document.getElementById(oyaAry[i]) != null){
			response(oyaAry[i]);
			return;
		}
	}
	//呼び出し元の子画面がなければ''を返却
	response('');
}


/*******************************************************************************
 * 相互評価登録画面
 ******************************************************************************/
/**
 * 相互評価登録画面を起動する
 *
 * @param twin
 *            起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param gksktdid
 *            対象科目の学習活動ID
 * @param userid
 *            表示対象ユーザID
 */
function openSougoTrkDialog(twin, gksktdid, userid) {
	twin = twin || window;

	if ($("#iframeSougoTrkWin").val() != undefined) {
		return;
	}

	var _buttons = {};

	// 登録ボタン
	_buttons[updBtnName] = function() {
		document.getElementById('iframeSougoTrkWin').contentWindow.doSougoIns();
	};

	// 閉じるボタン
	_buttons[clsBtnName] = function() {

		if (!document.getElementById("iframeSougoTrkWin").contentWindow.isChanged) {
			beforeClose('iframeSougoTrkWin');
			closeDialogRestore(twin, "iframeSougoTrkWin", "iframeStuGksKtdWin");

		} else {
			confirmDialogDef(confWinCelClsMessage,
				function(cancel) {
					if (!cancel) {
						beforeClose('iframeSougoTrkWin');
						closeDialogRestore(twin, "iframeSougoTrkWin", "iframeStuGksKtdWin");
					}
				}
			);
		}

	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeSougoTrkWin" class="iframeSougoTrkWin" ' + 'src="'
					+ sougoTrkUrl + "?userid=" + userid + "&gksktdid=" + gksktdid
					+ '" />', twin.document).dialog(
			{
				width : 1100,
				height : 550,
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ不要
					$(this, twin.document).closest(".ui-dialog").find(
						".ui-dialog-titlebar").hide();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(
						".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '575px');
//					$(this).css('height', '500px');
				},
				close : function(event, ui) {
					$(this).dialog("destroy");
				}
			}).dialog('open');
};

/*******************************************************************************
 * 相互評価一覧画面
 ******************************************************************************/
/**
 * 相互評価一覧画面を起動する
 *
 * @param twin
 *            起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param gksktdid
 *            対象科目の学習活動ID
 * @param userid
 *            表示対象ユーザID
 */
function sougoIcrnDialogOpen(twin, gksktdid, userid) {
	twin = twin || window;

	if ($("#iframeSougoIcrnWin").val() != undefined) {
		return;
	}

	var _buttons = {};
	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		// 画面終了
		var oyaKouho = ['iframeStuGksKtdWin', 'iframeHyokaTrkWin'];
		identifyOyaFrame(oyaKouho,function(oyaframe){
			closeDialog(window.parent, 'iframeSougoIcrnWin', oyaframe);
		});
	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeSougoIcrnWin" class="iframeSougoIcrnWin" ' + 'src="'
					+ sougoIcrnUrl + "?userid=" + userid + "&gksktdid=" + gksktdid
					+ '" />', twin.document).dialog(
			{
				width : 1220,
				height : 600,
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ不要
					$(this, twin.document).closest(".ui-dialog").find(
						".ui-dialog-titlebar").hide();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(
						".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '575px');
				},
				close : function(event, ui) {
					$(this).dialog("destroy");
				}
			}).dialog('open');
};

/*******************************************************************************
 * 集計画面
 ******************************************************************************/
/**
 * 集計画面を起動する
 * @param twin 起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param gksktdid 対象科目の学習活動ID
 */
function syukeiDialogOpen(twin, gksktdid) {
	twin = twin || window;

	var frameId = 'iframeSyukeiWin';

	if ($("#" + frameId).val() != undefined) {
		return;
	}

	var _buttons = [];

	// CSVDLボタン
	_buttons.push({
		text: syuKeiDlBtnName,
		class:frameId + '_btnCsvDl',
		click: function() {
			document.getElementById(frameId).contentWindow.doCsv();
		}
	});

	_buttons.push({
		text: kojinDlBtnName,
		class:frameId + '_btnCsvDl',
		click: function() {
			document.getElementById(frameId).contentWindow.doCsvKojin();
		}
	});

	// 閉じるボタン
	_buttons.push({
		text: clsBtnName,
		class:frameId + '_btnClose',
		click: function() {
			// ダイアログを閉じる前の処理
			beforeClose(frameId);
			// セッションエラー回避
			updOyaSign(frameId);
			// 画面終了
			$('.' + frameId, twin.document).dialog('close');
		}
	});

	// URLを指定したiframeを小窓で表示
	$(
		'<iframe id="' + frameId + '" class="' + frameId + '" ' + 'src="'
			+ syukeiUrl + "?gksktdid=" + gksktdid + '" />', twin.document).dialog(
		{
			width : 1100,
			height : 550,
			resizable : false,
			autoOpen : false,
			closeOnEscape : true,
			//modal時のdraggableは組み合わせ固定
			modal : true, draggable : false,
			position : {
				my : "left top",
				at : "left top",
				of: positionLT()
			},
			buttons : _buttons,
			open : function(event, ui) {
				positionLT();
				// ヘッダ不要
				$(this, twin.document).closest(".ui-dialog").find(
					".ui-dialog-titlebar").hide();
				// ×ボタン不要
				$(this, twin.document).closest(".ui-dialog").find(
					".ui-dialog-titlebar-close").hide();
				//ボタン隠す
				$('.ui-dialog-buttonpane').hide();
				// iframeにフォーカス
				$(this).focus();
				// iframeのCSSを指定
				$(this).css('width', '96%');
				$(this).css('height', '500px');
			},
			close : function(event, ui) {
				$(this).dialog("destroy");
			}
		}

	).dialog('open');

};

/** *レーダーチャートを表示する** */
/**
 * number : 対象の科目の番号 String polygonNum : チャートの頂点数 String gradeVal : 各頂点に対する評価値
 * ArrayList<String> maxGrade : 段階の最大値 String
 */
function makeChart(number, polygonNum, gradeVal, maxGrade) {
//alert("num:"+number+" pol"+polygonNum+" gra"+gradeVal+" max"+maxGrade);
	var alphabet = [  "①", "②", "③", "④", "⑤", "⑥", "⑦", "⑧", "⑨", "⑩",
	                  "⑪","⑫","⑬","⑭","⑮","⑯","⑰","⑱","⑲","⑳" ];
	var labels = [];

	for ( var i = 0; i < polygonNum; i++) {
		labels.push(alphabet[i]);
	}

//	if (gradeVal == 0) {
//		gradeVal = [ 0, 0, 0, 0, 0 ];
//	}
	var data = [];
	if(polygonNum == null || gradeVal == null || maxGrade == null){
		data = {
				labels : labels,
				datasets : [{
					data : ''
				}]
			};
	}else{
		data = {
			labels : labels,
			datasets : [ {
				fillColor : "rgba(255,66,119,0.6)",
				strokeColor : "rgba(171,26,84,0.4)",
				pointColor : "rgba(171,26,84,0.8)",
				pointStrokeColor : "#fff",
				data : gradeVal
			} ]
		};
	}

	var options = {

		// Boolean - If we show the scale above the chart data
		scaleOverlay : false,

		// Boolean - If we want to override with a hard coded scale
		scaleOverride : true,

		// ** Required if scaleOverride is true **
		// Number - The number of steps in a hard coded scale
		scaleSteps : maxGrade,
		// Number - The value jump in the hard coded scale
		scaleStepWidth : 1,
		// Number - The centre starting value
		scaleStartValue : 0,

		// Boolean - Whether to show lines for each scale point
		scaleShowLine : true,

		// String - Colour of the scale line
		scaleLineColor : "rgba(0,0,0,.1)",

		// Number - Pixel width of the scale line
		scaleLineWidth : 1,

		// Boolean - Whether to show labels on the scale
		scaleShowLabels : true,

		// Interpolated JS string - can access value
		// scaleLabel : "", */

		// String - Scale label font declaration for the scale label
		scaleFontFamily : "'Arial'",

		// Number - Scale label font size in pixels
		scaleFontSize : 12,

		// String - Scale label font weight style
		scaleFontStyle : "normal",

		// String - Scale label font colour
		scaleFontColor : "#666",

		// Boolean - Show a backdrop to the scale label
		scaleShowLabelBackdrop : true,

		// String - The colour of the label backdrop
		scaleBackdropColor : "rgba(255,255,255,0.75)",

		// Number - The backdrop padding above & below the label in pixels
		scaleBackdropPaddingY : 2,

		// Number - The backdrop padding to the side of the label in pixels
		scaleBackdropPaddingX : 2,

		// Boolean - Whether we show the angle lines out of the radar
		angleShowLineOut : true,

		// String - Colour of the angle line
		angleLineColor : "rgba(0,0,0,.1)",

		// Number - Pixel width of the angle line
		angleLineWidth : 1,

		/** *頂点に表示する文字列関係 start*************** */
		// String - Point label font declaration
		pointLabelFontFamily : "'Arial'",
		// String - Point label font weight
		pointLabelFontStyle : "normal",
		// Number - Point label font size in pixels
		//頂点に表示する文字列の大きさ
		pointLabelFontSize : 15,
		//String - Point label font colour
		pointLabelFontColor : "#666",
		/**************************** end****************/

		//Boolean - Whether to show a dot for each point
		pointDot : true,

		//Number - Radius of each point dot in pixels
		pointDotRadius : 3,

		//Number - Pixel width of point dot stroke
		pointDotStrokeWidth : 1,

		//Boolean - Whether to show a stroke for datasets
		datasetStroke : true,

		//Number - Pixel width of dataset stroke
		datasetStrokeWidth : 2,

		//Boolean - Whether to fill the dataset with a colour
		datasetFill : true,

		//Boolean - Whether to animate the chart
		animation : true,

		//Number - Number of animation steps
		animationSteps : 30,

		//String - Animation easing effect
		animationEasing : "easeOutQuart",

		//Function - Fires when the animation is complete
		onAnimationComplete : null

	};
	var name = "chart_" + number;
	new Chart(document.getElementById(name).getContext('2d')).Radar(data,
			options);
}

/**親の表示時間を子の表示時間に上書き(セッションエラー回避)*/
function updOyaSign(frameid) {
	var elem = window.parent.document.getElementById(frameid).contentWindow.document;
	var ko = $(elem.getElementsByName('sign')).val();
	//var oya = $('input[name="sign"]').val();
	$('input[name="sign"]').val(ko);
	//alert('親のsign1：'+oya+'\n子のsign ：'+ko+ '\n親のsign2：'+$('input[name="sign"]').val());
}

/**子の表示時間(呼び出し先)を子の表示時間(呼び出し元)に上書き(セッションエラー回避)*/
function updKoSign(sakiframeid, motoframeid) {
	if(motoframeid == ''){
		//何もしない(親画面から表示した子画面の場合)
	}else{
		var elem1 = window.parent.document.getElementById(sakiframeid).contentWindow.document;
		var ko1 = $(elem1.getElementsByName('sign')).val();
		var elem2 = window.parent.document.getElementById(motoframeid).contentWindow.document;
		$(elem2.getElementsByName('sign')).val(ko1);
	}

}

/**iframeのボタンパネルを隠す（子画面でボタン押下時）*/
function hide_buttonpane(){
	if(iframeFlg){
		window.parent.$('.ui-dialog-buttonpane').hide();
	}else{
		$('.ui-dialog-buttonpane').hide();
	}
}
/**iframeのボタンパネルを見せる（子画面のロード完了時）*/
function show_buttonpane(){
	if(iframeFlg){
		window.parent.$('.ui-dialog-buttonpane').show();
	}else{
		$('.ui-dialog-buttonpane').show();
	}
}
/**縦横のスクロールを初期化(左上)*/
function positionLT(){
	if(iframeFlg){
		$(window).scrollTop(0).scrollLeft(0);
		$(window.parent).scrollTop(0).scrollLeft(0);
	}else{
		$(window).scrollTop(0).scrollLeft(0);
	}
}
/**縦横のスクロールを初期化(右上)*/
function positionRT(){
	if(iframeFlg){
		$(window).scrollTop(0).scrollLeft(screen.width);
		$(window.parent).scrollTop(0).scrollLeft(screen.width);
	}else{
		$(window).scrollTop(0).scrollLeft(screen.width);
	}
}

/**iOSの場合iframeのスクロール表示対策*/
function frameScroll($idobj){

	/**iOSのiframeにスクロール表示*/
	if(is_ios){
		$idobj.wrap('<div class="iframeScroll"></div>');
		$idobj.parent().height($idobj.height()+20);
	}
}

/*******************************************************************************
 * 参照データの種類と内容
 ******************************************************************************/
/**
* @param twin
*            起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
*/
function analyzeHanreiDialogOpen(twin) {
	twin = twin || window;
	if ($("#iframeTopAnalizeHanreiWin").val() != undefined) {
		return;
	}
	var _buttons = {};
	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		window.parent.jQuery('.iframeTopAnalizeHanreiWin').dialog('close');
	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeTopAnalizeHanreiWin" class="iframeTopAnalizeHanreiWin" ' + 'src="' + analyzeHanreiUrl + '" />', twin.document)
			.dialog(
					{
						width : 500,
						height : 275,
						resizable : true,
						autoOpen : false,
						closeOnEscape : true,
						title : analyzeHanreiWinTitle,
						//modal時のdraggableは組み合わせ固定
						modal : false, draggable : true, appendTo : "#dialog_parent",
						position : {
							my : "left top",
							at : "left top",
							of: positionLT()
						},
						buttons : _buttons,
						open : function(event, ui) {
							positionLT();
							// ヘッダ要
							$(this).closest(".ui-dialog").find(
									".ui-dialog-titlebar").show();
							// ×ボタン不要
							$(this).closest(".ui-dialog").find(
									".ui-dialog-titlebar-close").hide();
							//ボタン隠す
							$('.ui-dialog-buttonpane').hide();
							// iframeにフォーカス
							$(this).focus();
							// iframeのCSSを指定
							$(this).css('width', '96%');
							$(this).css('height', '275px');

						},
						close : function(event, ui) {
							$(this).dialog("destroy");
						}
					}).dialog('open');
}

/*******************************************************************************
 * 成果物の計算方法
 ******************************************************************************/
/**
* @param twin
*            起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
*/
function seikaAnalyzeHanreiDialogOpen(twin) {
	twin = twin || window;
	if ($("#iframeSeikaAnalizeHanreiWin").val() != undefined) {
		return;
	}
	var _buttons = {};
	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		window.parent.jQuery('.iframeSeikaAnalizeHanreiWin').dialog('close');
	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeSeikaAnalizeHanreiWin" class="iframeSeikaAnalizeHanreiWin" ' + 'src="' + analyzeSeikaHanreiUrl + '" />', twin.document)
			.dialog(
					{
						width : 551,
						height : 455,
						resizable : true,
						autoOpen : false,
						closeOnEscape : true,
						title : analyzeSeikaHanreiWinTitle,
						//modal時のdraggableは組み合わせ固定
						modal : false, draggable : true, appendTo : "#dialog_parent",
						position : {
							my : "left top",
							at : "left top",
							of: positionLT()
						},
						buttons : _buttons,
						open : function(event, ui) {
							positionLT();
							// ヘッダ要
							$(this).closest(".ui-dialog").find(
									".ui-dialog-titlebar").show();
							// ×ボタン不要
							$(this).closest(".ui-dialog").find(
									".ui-dialog-titlebar-close").hide();
							//ボタン隠す
							$('.ui-dialog-buttonpane').hide();
							// iframeにフォーカス
							$(this).focus();
							// iframeのCSSを指定
							$(this).css('width', '96%');
							$(this).css('height', '455px');

						},
						close : function(event, ui) {
							$(this).dialog("destroy");
						}
					}).dialog('open');
}

/*******************************************************************************
 * システム利用、成果蓄積 内訳
 ******************************************************************************/
/**
 * システム利用の内訳グラフを表示する
 * @param twin
 *        起動窓の親画面を指定。（通常起動："window"、子画面(UI Dialog)から起動："window.parent"）
 * @param index 使用するデータインデックス
 * @param seikaflg 成果グラフフラグ
 */
function analyzeDetailDialogOpen(twin,index,seikaflg) {
	twin = twin || window;

	if ($("#iframeAnalizeDetailWin").val() != undefined) {
		return;
	}
	var _buttons = {};
	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		window.parent.jQuery('.iframeAnalizeDetailWin').dialog('close');
	};
    var height = 300;
    var i_height = '300px';
    var title = analyzeLoginDetailWinTitle;
    var url = analyzeSeikaDetailUrl;
	if(seikaflg){
		height = 600;
	    i_height = '470px';
	    title = analyzeSeikaDetailWinTitle;
	    url = analyzeSeikaDetailUrl;
	}

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="iframeAnalizeDetailWin" class="iframeAnalizeDetailWin" ' +
			'src="' + url + "?index=" + index + '" />',twin.document)
			.dialog(
					{
						width : 500,
						height : height,
						resizable : true,
						autoOpen : false,
						closeOnEscape : true,
						title : title,
						//modal時のdraggableは組み合わせ固定
						modal : true, draggable : false,
						position : {
							my : "left top",
							at : "left top",
							of: positionLT()
						},
						buttons : _buttons,
						open : function(event, ui) {
							positionLT();
							// ヘッダ要
							$(this).closest(".ui-dialog").find(
									".ui-dialog-titlebar").show();
							// ×ボタン不要
							$(this).closest(".ui-dialog").find(
									".ui-dialog-titlebar-close").hide();
							//ボタン隠す
							$('.ui-dialog-buttonpane').hide();
							// iframeにフォーカス
							$(this).focus();
							// iframeのCSSを指定
							$(this).css('width', '96%');
							$(this).css('height', i_height);

						},
						close : function(event, ui) {
							$(this).dialog("destroy");
						}
					}).dialog('open');
}

/*******************************************************************************
 * 授業支援ボックス連携情報画面
 ******************************************************************************/
function lmslinkInfoDialogOpen(twin, gksktdid) {
	twin = twin || window;


	var frameId = 'iframeLmslinkInfoWin';

	if ($('#' + frameId).val() != undefined) {
		return;
	}

	var _buttons = {};
	// 閉じるボタン
	_buttons[clsBtnName] = function() {
		// 画面終了
		$('.' + frameId, twin.document).dialog('close');
	};

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="' + frameId + '" class="' + frameId + '" '
					+ 'src="' + lmslinkInfoUrl + '?gksktdid=' + gksktdid
					+ '" />', twin.document).dialog(
			{
				width : 850,
				height : 450,
				resizable : true,
				autoOpen : false,
				closeOnEscape : true,
				title : lmslinkInfoWinTitle,
				//modal時のdraggableは組み合わせ固定
				modal : false, draggable : true, appendTo : "#dialog_parent",
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '500px');
				},
				close : function(event, ui) {
					$(this).dialog("destroy");
				}
			}).dialog('open');
}


/*******************************************************************************
 * 授業支援ボックス連携結果詳細画面
 ******************************************************************************/
// 授業支援ボックス連携結果詳細起動
function lmslinkDetailDialogOpen(twin, renkei_id) {
	twin = twin || window;

	var frameID = 'iframeLmsLinkDetailWin';

	if ($(('#' + frameID)).val() != undefined) {
		return;
	}

	// URLを指定したiframeを小窓で表示
	$(
			'<iframe id="' + frameID + '" class="' + frameID + '" '
					+ 'src="' + lmslinkDetailUrl + '?renkei_id=' + renkei_id + '" />',
			twin.document).dialog(
			{
				width : 800, // 900
				height : 250, // 230
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				title : lmslinkDetailWinTitle,
				//modal時のdraggableは組み合わせ固定
				modal : true, draggable : false,
				position : {
					my : "left top",
					at : "left top",
					of: positionLT()
				},
				// 20140428 アニメーションを発生させることで、余計な通信を発生させるため、アニメーションオフ
				/*show: "blind",// show/clip/explode/blind/bounce/drop/fold/slide
				hide: "slide",*/
				buttons : [
				    {
				    	text: warningdlBtnName,
						class:'download',
						click: function(event) {
							document.getElementById(frameID).contentWindow.frame_submit();
						}
					},
					{
						text: errordlBtnName,
						class:'download',
						click: function(event) {
							document.getElementById(frameID).contentWindow.frame_submit();
						}
					},
					{
						text: clsBtnName,
						class:'btn-update',
						click: function(event) {
							$(('.' + frameID), twin.document).dialog('close');
						}
					}
				],
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(
							".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '350px');

				},
				close : function(event, ui) {
					//.remove()だとJs側でエラーになっている。
					//$(this).dialog("destory").remove();
					$(this).dialog("destroy");
				}
			}).dialog('open');
}

/*******************************************************************************
 * 学習活動選択画面
 ******************************************************************************/
//学習活動選択画面起動
// ※時間割登録画面から呼び出されていることを大前提とする
function selectGakukatuDialogOpen(twin) {
	twin = twin || window;
	if ($("#iframeSelectGakukatuWin").val() != undefined) {
		return;
	}

	var _buttons = {};

	// 設定ボタン
	_buttons[setBtnName] = function() {

		// 引数を取得
		// iframe内SelectGakukatuDialog.jsのfanction：getParameter_gakukatuJhメソッドを呼び出して変数を取得する
		var [id, namaid, name, sbt] = twin.document.getElementById('iframeSelectGakukatuWin').contentWindow.getParameter_gakukatuJh();
		// id     : 学習活動ID(暗号化済)
		// namaid : 学習活動ID(暗号化していない状態)
		// name   : 学習活動名称
		// sbt    : 学習活動種別

		if(id==''){
			// 未選択で設定ボタンを押下した場合は空打ちと判定する
			return;
		}

		// 取得情報をもとにHTMLを生成し追加処理を行う(時間割登録画面側)
		var addflg = addGakukatu(id, name, sbt, namaid);
		if(addflg == true){
			//親の表示時間を子の表示時間に上書き(セッションエラー回避)
			updOyaSign('iframeSelectGakukatuWin');
			// 画面終了
			$('.iframeSelectGakukatuWin', twin.document).dialog('close');
		}else{
			alertDialog(confWinShuan_errMsg01, errWinTitle, okBtnName);
		}
	};

	// 閉じるボタン
	_buttons[clsBtnName] = function() {

		//親の表示時間を子の表示時間に上書き(セッションエラー回避)
		updOyaSign('iframeSelectGakukatuWin');
		// 画面終了
		$('.iframeSelectGakukatuWin', twin.document).dialog('close');

	};

	// URLを指定したiframeを小窓で表示
	$(		'<iframe id="iframeSelectGakukatuWin" class="iframeSelectGakukatuWin" src="' + slctGakukatuUrl + '" />', twin.document)
			.dialog({
				width : 800,
				height : 1000,
				resizable : false,
				autoOpen : false,
				closeOnEscape : true,
				title : slctGakukatuUrlWinTitle,
				modal : true,
				draggable : true,
				position : {
					my : "center center",
					at : "center center",
					of: positionLT()
				},
				buttons : _buttons,
				open : function(event, ui) {
					positionLT();
					// ヘッダ要
					$(this, twin.document).closest(".ui-dialog").find(".ui-dialog-titlebar").show();
					// ×ボタン不要
					$(this, twin.document).closest(".ui-dialog").find(".ui-dialog-titlebar-close").hide();
					//ボタン隠す
					$('.ui-dialog-buttonpane').hide();
					// iframeにフォーカス
					$(this).focus();
					// iframeのCSSを指定
					$(this).css('width', '96%');
					$(this).css('height', '600px');

				},
				close : function(event, ui) {
					$(this).dialog("destroy");
				}
			}).dialog('open');
}